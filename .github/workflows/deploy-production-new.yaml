name: Deploy to New Production Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: pip install -r adoorback/requirements.txt

      - name: Connect to EC2 and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NEW_SERVER_HOST }}
          username: ${{ secrets.NEW_SERVER_USER }}
          key: ${{ secrets.NEW_SERVER_KEY }}
          script: |
            echo "🚀 최신 코드 Pull 받기"
            git pull

            echo "🛑 기존 컨테이너 종료"
            docker compose -f docker-compose.production.yml down

            echo "🔄 컨테이너 재배포 (Build & Run)"
            docker compose -f docker-compose.production.yml up --build -d

            echo "🛑 기존 nginx-reverse-proxy 컨테이너 종료"
            docker stop nginx-reverse-proxy || true
            docker rm nginx-reverse-proxy || true

            echo "🏠 홈으로 이동"
            cd ~

            echo "🔄 nginx-reverse-proxy 재시작"
            docker run -d \
              --name nginx-reverse-proxy \
              --network whoamitoday-network \
              -p 80:80 -p 443:443 \
              -v frontend_build_volume:/usr/share/nginx/html \
              -v /home/ubuntu/nginx_conf:/etc/nginx/conf.d \
              -v /etc/letsencrypt:/etc/letsencrypt:ro \
              -v whoami-today-backend_whoami-backend-media:/app/adoorback/adoorback/adoorback/media \
              nginx:alpine

            echo "✅ 배포 완료!"
